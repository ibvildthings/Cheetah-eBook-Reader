diff --git a/bionic.html b/bionic.html
index 1234567..abcdefg 100644
--- a/bionic.html
+++ b/bionic.html
@@ -150,8 +150,7 @@
             <div class="sidebar-section">
                 <h3>Reading Mode</h3>
                 <div class="btn-group">
-                    <button id="btn-normal" class="active">Normal</button>
-                    <button id="btn-flow">Flow</button>
+                    <button id="btn-flow">▶ Start Flow</button>
                 </div>
                 <div class="btn-group">
                     <button id="btn-bionic">Bionic</button>
@@ -160,9 +159,6 @@
 
             <div class="sidebar-section">
                 <h3>Flow Controls</h3>
-                <div class="btn-group">
-                    <button id="btn-play">▶ Play</button>
-                </div>
                 <div class="control-group">
                     <label>Speed <span class="control-value" id="speed-value">300 WPM</span></label>
                     <input type="range" id="speed-slider" min="100" max="600" value="300">
@@ -287,22 +283,24 @@
             updateMargins();
         });
 
-        // All other controls (copy from your existing app)
-        document.getElementById('btn-normal').addEventListener('click', () => {
-            reader.setMode('normal');
-            document.getElementById('btn-normal').classList.add('active');
-            document.getElementById('btn-flow').classList.remove('active');
-        });
-
+        // Flow toggle button - enters flow mode and auto-starts
         document.getElementById('btn-flow').addEventListener('click', () => {
-            reader.setMode('flow');
-            document.getElementById('btn-flow').classList.add('active');
-            document.getElementById('btn-normal').classList.remove('active');
+            const state = reader.getState();
+            const flowBtn = document.getElementById('btn-flow');
+            
+            if (state.mode === 'flow') {
+                reader.setMode('normal');
+                flowBtn.classList.remove('active');
+                flowBtn.textContent = '▶ Start Flow';
+            } else {
+                reader.setMode('flow');
+                setTimeout(() => reader.play(), 150);
+                flowBtn.classList.add('active');
+                flowBtn.textContent = '⏹ Stop Flow';
+            }
         });
 
         document.getElementById('btn-bionic').addEventListener('click', function() {
             reader.setBionic(!reader.getState().bionic);
             this.classList.toggle('active');
         });
-
-        document.getElementById('btn-play').addEventListener('click', function() {
-            reader.togglePlay();
-            const state = reader.getState();
-            this.textContent = state.isPlaying ? '⏸ Pause' : '▶ Play';
-        });
 
         document.getElementById('speed-slider').addEventListener('input', e => {